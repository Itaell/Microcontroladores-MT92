

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 05 00:43:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 05/05/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K22 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	smallconst
    57  001000                     __psmallconst:
    58                           	callstack 0
    59  001000  00                 	db	0
    60  001001                     _num:
    61                           	callstack 0
    62  001001  3F                 	db	63
    63  001002  06                 	db	6
    64  001003  5B                 	db	91
    65  001004  4F                 	db	79
    66  001005  66                 	db	102
    67  001006  6D                 	db	109
    68  001007  7D                 	db	125
    69  001008  07                 	db	7
    70  001009  7F                 	db	127
    71  00100A  67                 	db	103
    72  00100B                     __end_of_num:
    73                           	callstack 0
    74  0000                     _ANSELB	set	3897
    75  0000                     _ANSELA	set	3896
    76  0000                     _ANSELD	set	3899
    77  0000                     _TRISA	set	3986
    78  0000                     _TRISD	set	3989
    79  0000                     _OSCCONbits	set	4051
    80  0000                     _LATD	set	3980
    81  0000                     _LATAbits	set	3977
    82  0000                     _PEIE	set	32662
    83  0000                     _GIE	set	32663
    84  0000                     _INT1IE	set	32643
    85  0000                     _INT0IE	set	32660
    86  0000                     _INT1IF	set	32640
    87  0000                     _INT0IF	set	32657
    88  00100B  00                 	db	0	; dummy byte at the end
    89  0000                     
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93  001298                     __pcinit:
    94                           	callstack 0
    95  001298                     start_initialization:
    96                           	callstack 0
    97  001298                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Clear objects allocated to COMRAM (4 bytes)
   101  001298  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   102  00129A  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   103  00129C  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   104  00129E  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   105  0012A0                     end_of_initialization:
   106                           	callstack 0
   107  0012A0                     __end_of__initialization:
   108                           	callstack 0
   109  0012A0  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   110  0012A2  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   111  0012A4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   112  0012A6  6EF8               	movwf	tblptru,c
   113  0012A8  0E10               	movlw	high __Lsmallconst
   114  0012AA  6EF7               	movwf	tblptrh,c
   115  0012AC  0100               	movlb	0
   116  0012AE  EFC0  F008         	goto	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMRAM
   119  00000B                     __pbssCOMRAM:
   120                           	callstack 0
   121  00000B                     _con:
   122                           	callstack 0
   123  00000B                     	ds	1
   124  00000C                     _cen:
   125                           	callstack 0
   126  00000C                     	ds	1
   127  00000D                     _dec:
   128                           	callstack 0
   129  00000D                     	ds	1
   130  00000E                     _uni:
   131                           	callstack 0
   132  00000E                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000001                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000001                     ?___awdiv:
   138                           	callstack 0
   139  000001                     ?___awmod:
   140                           	callstack 0
   141  000001                     multip@dec:
   142                           	callstack 0
   143  000001                     ___awdiv@dividend:
   144                           	callstack 0
   145  000001                     ___awmod@dividend:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0x0
   149  000001                     	ds	1
   150  000002                     multip@uni:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x1
   154  000002                     	ds	1
   155  000003                     ??_multip:
   156  000003                     ___awdiv@divisor:
   157                           	callstack 0
   158  000003                     ___awmod@divisor:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x2
   162  000003                     	ds	1
   163  000004                     multip@cen:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x3
   167  000004                     	ds	1
   168  000005                     ___awdiv@counter:
   169                           	callstack 0
   170  000005                     ___awmod@counter:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x4
   174  000005                     	ds	1
   175  000006                     ___awdiv@sign:
   176                           	callstack 0
   177  000006                     ___awmod@sign:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x5
   181  000006                     	ds	1
   182  000007                     ___awdiv@quotient:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x6
   186  000007                     	ds	2
   187  000009                     desnum@con:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x8
   191  000009                     	ds	2
   192  00000B                     
   193                           ; 1 bytes @ 0xA
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 56 in file "code_PFU1.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels required when called: 3
   219 ;; This function calls:
   220 ;;		_desnum
   221 ;;		_multip
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text0
   228  001180                     __ptext0:
   229                           	callstack 0
   230  001180                     _main:
   231                           	callstack 28
   232  001180                     
   233                           ;code_PFU1.c: 58:     while(1){
   234  001180  0E03               	movlw	3
   235  001182  12D3               	iorwf	211,f,c	;volatile
   236                           
   237                           ;code_PFU1.c: 59: 
   238  001184  50D3               	movf	211,w,c	;volatile
   239  001186  0B8F               	andlw	-113
   240  001188  0950               	iorlw	80
   241  00118A  6ED3               	movwf	211,c	;volatile
   242                           
   243                           ;code_PFU1.c: 60:         LATAbits.LA0 = 0;
   244  00118C  0E00               	movlw	0
   245  00118E  6E95               	movwf	149,c	;volatile
   246                           
   247                           ;code_PFU1.c: 61:         multip(cen, dec, uni);
   248  001190  0E00               	movlw	0
   249  001192  010F               	movlb	15	; () banked
   250  001194  6F3B               	movwf	59,b	;volatile
   251                           
   252                           ;code_PFU1.c: 62:         desnum(con);
   253  001196  0E00               	movlw	0
   254  001198  6E92               	movwf	146,c	;volatile
   255                           
   256                           ;code_PFU1.c: 63:         cen = (num[cen]);
   257  00119A  0E00               	movlw	0
   258  00119C  6F38               	movwf	56,b	;volatile
   259                           
   260                           ;code_PFU1.c: 64:         dec = (num[dec]);
   261  00119E  0E00               	movlw	0
   262  0011A0  6F39               	movwf	57,b	;volatile
   263  0011A2                     
   264                           ; BSR set to: 15
   265                           ;code_PFU1.c: 65:         uni = (num[uni]);
   266  0011A2  88F2               	bsf	4082,4,c	;volatile
   267  0011A4                     
   268                           ; BSR set to: 15
   269                           ;code_PFU1.c: 66:     }
   270  0011A4  86F0               	bsf	4080,3,c	;volatile
   271  0011A6                     
   272                           ; BSR set to: 15
   273                           ;code_PFU1.c: 67:     return;
   274  0011A6  8EF2               	bsf	4082,7,c	;volatile
   275  0011A8                     
   276                           ; BSR set to: 15
   277                           ;code_PFU1.c: 68: }
   278  0011A8  8CF2               	bsf	4082,6,c	;volatile
   279  0011AA                     l993:
   280  0011AA  9089               	bcf	137,0,c	;volatile
   281  0011AC  C00D  F001         	movff	_dec,multip@dec
   282  0011B0  C00E  F002         	movff	_uni,multip@uni
   283  0011B4  500C               	movf	_cen^0,w,c
   284  0011B6  EC01  F009         	call	_multip
   285  0011BA  C00B  F009         	movff	_con,desnum@con
   286  0011BE  6A0A               	clrf	(desnum@con+1)^0,c
   287  0011C0  EC27  F009         	call	_desnum	;wreg free
   288  0011C4  0E01               	movlw	low _num
   289  0011C6  240C               	addwf	_cen^0,w,c
   290  0011C8  6EF6               	movwf	tblptrl,c
   291  0011CA  6AF7               	clrf	tblptrh,c
   292  0011CC  0E10               	movlw	high _num
   293  0011CE  22F7               	addwfc	tblptrh,f,c
   294  0011D0                     	if	0	;There are less than 3 active tblptr bytes
   295  0011D0                     	endif
   296  0011D0  0008               	tblrd		*
   297  0011D2  CFF5 F00C          	movff	tablat,_cen
   298  0011D6  0E01               	movlw	low _num
   299  0011D8  240D               	addwf	_dec^0,w,c
   300  0011DA  6EF6               	movwf	tblptrl,c
   301  0011DC  6AF7               	clrf	tblptrh,c
   302  0011DE  0E10               	movlw	high _num
   303  0011E0  22F7               	addwfc	tblptrh,f,c
   304  0011E2                     	if	0	;There are less than 3 active tblptr bytes
   305  0011E2                     	endif
   306  0011E2  0008               	tblrd		*
   307  0011E4  CFF5 F00D          	movff	tablat,_dec
   308  0011E8  0E01               	movlw	low _num
   309  0011EA  240E               	addwf	_uni^0,w,c
   310  0011EC  6EF6               	movwf	tblptrl,c
   311  0011EE  6AF7               	clrf	tblptrh,c
   312  0011F0  0E10               	movlw	high _num
   313  0011F2  22F7               	addwfc	tblptrh,f,c
   314  0011F4                     	if	0	;There are less than 3 active tblptr bytes
   315  0011F4                     	endif
   316  0011F4  0008               	tblrd		*
   317  0011F6  CFF5 F00E          	movff	tablat,_uni
   318  0011FA  EFD5  F008         	goto	l993
   319  0011FE  EF1A  F000         	goto	start
   320  001202                     __end_of_main:
   321                           	callstack 0
   322                           
   323 ;; *************** function _multip *****************
   324 ;; Defined at:
   325 ;;		line 38 in file "code_PFU1.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;  cen             1    wreg     unsigned char 
   328 ;;  dec             1    0[COMRAM] unsigned char 
   329 ;;  uni             1    1[COMRAM] unsigned char 
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  cen             1    3[COMRAM] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;Total ram usage:        4 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356  001202                     __ptext1:
   357                           	callstack 0
   358  001202                     _multip:
   359                           	callstack 29
   360                           
   361                           ;incstack = 0
   362                           ;multip@cen stored from wreg
   363  001202  6E04               	movwf	multip@cen^0,c
   364  001204                     
   365                           ;code_PFU1.c: 40:     _delay((unsigned long)((20)*(4000000/4000.0)));
   366  001204  8289               	bsf	137,1,c	;volatile
   367  001206                     
   368                           ;code_PFU1.c: 41:     LATAbits.LA3 = 0;
   369  001206  C004  FF8C         	movff	multip@cen,3980	;volatile
   370  00120A                     
   371                           ;code_PFU1.c: 42: }
   372  00120A  0E1A               	movlw	26
   373  00120C  6E03               	movwf	??_multip^0,c
   374  00120E  0EF8               	movlw	248
   375  001210                     u277:
   376  001210  2EE8               	decfsz	wreg,f,c
   377  001212  D7FE               	bra	u277
   378  001214  2E03               	decfsz	??_multip^0,f,c
   379  001216  D7FC               	bra	u277
   380  001218  D000               	nop2	
   381  00121A                     
   382                           ;code_PFU1.c: 43: 
   383  00121A  9289               	bcf	137,1,c	;volatile
   384  00121C                     
   385                           ;code_PFU1.c: 45: 
   386  00121C  8489               	bsf	137,2,c	;volatile
   387  00121E                     
   388                           ;code_PFU1.c: 46:     OSCCONbits.SCS = 0x3;
   389  00121E  C001  FF8C         	movff	multip@dec,3980	;volatile
   390  001222                     
   391                           ;code_PFU1.c: 47:     OSCCONbits.IRCF = 0x5;
   392  001222  0E1A               	movlw	26
   393  001224  6E03               	movwf	??_multip^0,c
   394  001226  0EF8               	movlw	248
   395  001228                     u287:
   396  001228  2EE8               	decfsz	wreg,f,c
   397  00122A  D7FE               	bra	u287
   398  00122C  2E03               	decfsz	??_multip^0,f,c
   399  00122E  D7FC               	bra	u287
   400  001230  D000               	nop2	
   401  001232                     
   402                           ;code_PFU1.c: 48:     TRISD = 0x00;
   403  001232  9489               	bcf	137,2,c	;volatile
   404  001234                     
   405                           ;code_PFU1.c: 50:     TRISA = 0x00;
   406  001234  8689               	bsf	137,3,c	;volatile
   407  001236                     
   408                           ;code_PFU1.c: 51:     ANSELA = 0x00;
   409  001236  C002  FF8C         	movff	multip@uni,3980	;volatile
   410  00123A                     
   411                           ;code_PFU1.c: 52:     ANSELB = 0x00;
   412  00123A  0E1A               	movlw	26
   413  00123C  6E03               	movwf	??_multip^0,c
   414  00123E  0EF8               	movlw	248
   415  001240                     u297:
   416  001240  2EE8               	decfsz	wreg,f,c
   417  001242  D7FE               	bra	u297
   418  001244  2E03               	decfsz	??_multip^0,f,c
   419  001246  D7FC               	bra	u297
   420  001248  D000               	nop2	
   421  00124A                     
   422                           ;code_PFU1.c: 53:     INT0IE = 1;
   423  00124A  9689               	bcf	137,3,c	;volatile
   424  00124C  0012               	return		;funcret
   425  00124E                     __end_of_multip:
   426                           	callstack 0
   427                           
   428 ;; *************** function _desnum *****************
   429 ;; Defined at:
   430 ;;		line 30 in file "code_PFU1.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;  con             2    8[COMRAM] int 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 2
   451 ;; This function calls:
   452 ;;		___awdiv
   453 ;;		___awmod
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text2
   460  00124E                     __ptext2:
   461                           	callstack 0
   462  00124E                     _desnum:
   463                           	callstack 28
   464  00124E                     
   465                           ;code_PFU1.c: 32: 
   466  00124E  C009  F001         	movff	desnum@con,___awmod@dividend
   467  001252  C00A  F002         	movff	desnum@con+1,___awmod@dividend+1
   468  001256  0E00               	movlw	0
   469  001258  6E04               	movwf	(___awmod@divisor+1)^0,c
   470  00125A  0E0A               	movlw	10
   471  00125C  6E03               	movwf	___awmod@divisor^0,c
   472  00125E  EC68  F008         	call	___awmod	;wreg free
   473  001262  5001               	movf	?___awmod^0,w,c
   474  001264  6E0E               	movwf	_uni^0,c
   475                           
   476                           ;code_PFU1.c: 33:     LATAbits.LA2 = 1;
   477  001266  C009  F001         	movff	desnum@con,___awdiv@dividend
   478  00126A  C00A  F002         	movff	desnum@con+1,___awdiv@dividend+1
   479  00126E  0E00               	movlw	0
   480  001270  6E04               	movwf	(___awdiv@divisor+1)^0,c
   481  001272  0E0A               	movlw	10
   482  001274  6E03               	movwf	___awdiv@divisor^0,c
   483  001276  EC06  F008         	call	___awdiv	;wreg free
   484  00127A  5001               	movf	?___awdiv^0,w,c
   485  00127C  6E0D               	movwf	_dec^0,c
   486                           
   487                           ;code_PFU1.c: 34:     LATD = dec;
   488  00127E  C009  F001         	movff	desnum@con,___awdiv@dividend
   489  001282  C00A  F002         	movff	desnum@con+1,___awdiv@dividend+1
   490  001286  0E00               	movlw	0
   491  001288  6E04               	movwf	(___awdiv@divisor+1)^0,c
   492  00128A  0E64               	movlw	100
   493  00128C  6E03               	movwf	___awdiv@divisor^0,c
   494  00128E  EC06  F008         	call	___awdiv	;wreg free
   495  001292  5001               	movf	?___awdiv^0,w,c
   496  001294  6E0C               	movwf	_cen^0,c
   497  001296  0012               	return		;funcret
   498  001298                     __end_of_desnum:
   499                           	callstack 0
   500                           
   501 ;; *************** function ___awmod *****************
   502 ;; Defined at:
   503 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  dividend        2    0[COMRAM] int 
   506 ;;  divisor         2    2[COMRAM] int 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  sign            1    5[COMRAM] unsigned char 
   509 ;;  counter         1    4[COMRAM] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  2    0[COMRAM] int 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;Total ram usage:        6 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_desnum
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text3
   534  0010D0                     __ptext3:
   535                           	callstack 0
   536  0010D0                     ___awmod:
   537                           	callstack 28
   538  0010D0  0E00               	movlw	0
   539  0010D2  6E06               	movwf	___awmod@sign^0,c
   540  0010D4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   541  0010D6  EF71  F008         	goto	u210
   542  0010DA  EF6F  F008         	goto	u211
   543  0010DE                     u211:
   544  0010DE  EF77  F008         	goto	l929
   545  0010E2                     u210:
   546  0010E2  6C01               	negf	___awmod@dividend^0,c
   547  0010E4  1E02               	comf	(___awmod@dividend+1)^0,f,c
   548  0010E6  B0D8               	btfsc	status,0,c
   549  0010E8  2A02               	incf	(___awmod@dividend+1)^0,f,c
   550  0010EA  0E01               	movlw	1
   551  0010EC  6E06               	movwf	___awmod@sign^0,c
   552  0010EE                     l929:
   553  0010EE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   554  0010F0  EF7E  F008         	goto	u220
   555  0010F4  EF7C  F008         	goto	u221
   556  0010F8                     u221:
   557  0010F8  EF82  F008         	goto	l933
   558  0010FC                     u220:
   559  0010FC  6C03               	negf	___awmod@divisor^0,c
   560  0010FE  1E04               	comf	(___awmod@divisor+1)^0,f,c
   561  001100  B0D8               	btfsc	status,0,c
   562  001102  2A04               	incf	(___awmod@divisor+1)^0,f,c
   563  001104                     l933:
   564  001104  5003               	movf	___awmod@divisor^0,w,c
   565  001106  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   566  001108  B4D8               	btfsc	status,2,c
   567  00110A  EF89  F008         	goto	u231
   568  00110E  EF8B  F008         	goto	u230
   569  001112                     u231:
   570  001112  EFAF  F008         	goto	l949
   571  001116                     u230:
   572  001116  0E01               	movlw	1
   573  001118  6E05               	movwf	___awmod@counter^0,c
   574  00111A  EF93  F008         	goto	l939
   575  00111E                     l937:
   576  00111E  90D8               	bcf	status,0,c
   577  001120  3603               	rlcf	___awmod@divisor^0,f,c
   578  001122  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   579  001124  2A05               	incf	___awmod@counter^0,f,c
   580  001126                     l939:
   581  001126  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   582  001128  EF98  F008         	goto	u241
   583  00112C  EF9A  F008         	goto	u240
   584  001130                     u241:
   585  001130  EF8F  F008         	goto	l937
   586  001134                     u240:
   587  001134                     l941:
   588  001134  5003               	movf	___awmod@divisor^0,w,c
   589  001136  5C01               	subwf	___awmod@dividend^0,w,c
   590  001138  5004               	movf	(___awmod@divisor+1)^0,w,c
   591  00113A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   592  00113C  A0D8               	btfss	status,0,c
   593  00113E  EFA3  F008         	goto	u251
   594  001142  EFA5  F008         	goto	u250
   595  001146                     u251:
   596  001146  EFA9  F008         	goto	l945
   597  00114A                     u250:
   598  00114A  5003               	movf	___awmod@divisor^0,w,c
   599  00114C  5E01               	subwf	___awmod@dividend^0,f,c
   600  00114E  5004               	movf	(___awmod@divisor+1)^0,w,c
   601  001150  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   602  001152                     l945:
   603  001152  90D8               	bcf	status,0,c
   604  001154  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   605  001156  3203               	rrcf	___awmod@divisor^0,f,c
   606  001158  2E05               	decfsz	___awmod@counter^0,f,c
   607  00115A  EF9A  F008         	goto	l941
   608  00115E                     l949:
   609  00115E  5006               	movf	___awmod@sign^0,w,c
   610  001160  B4D8               	btfsc	status,2,c
   611  001162  EFB5  F008         	goto	u261
   612  001166  EFB7  F008         	goto	u260
   613  00116A                     u261:
   614  00116A  EFBB  F008         	goto	l953
   615  00116E                     u260:
   616  00116E  6C01               	negf	___awmod@dividend^0,c
   617  001170  1E02               	comf	(___awmod@dividend+1)^0,f,c
   618  001172  B0D8               	btfsc	status,0,c
   619  001174  2A02               	incf	(___awmod@dividend+1)^0,f,c
   620  001176                     l953:
   621  001176  C001  F001         	movff	___awmod@dividend,?___awmod
   622  00117A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   623  00117E  0012               	return		;funcret
   624  001180                     __end_of___awmod:
   625                           	callstack 0
   626                           
   627 ;; *************** function ___awdiv *****************
   628 ;; Defined at:
   629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  dividend        2    0[COMRAM] int 
   632 ;;  divisor         2    2[COMRAM] int 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  quotient        2    6[COMRAM] int 
   635 ;;  sign            1    5[COMRAM] unsigned char 
   636 ;;  counter         1    4[COMRAM] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  2    0[COMRAM] int 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;Total ram usage:        8 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		_desnum
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text4
   661  00100C                     __ptext4:
   662                           	callstack 0
   663  00100C                     ___awdiv:
   664                           	callstack 28
   665  00100C  0E00               	movlw	0
   666  00100E  6E06               	movwf	___awdiv@sign^0,c
   667  001010  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   668  001012  EF0F  F008         	goto	u150
   669  001016  EF0D  F008         	goto	u151
   670  00101A                     u151:
   671  00101A  EF15  F008         	goto	l885
   672  00101E                     u150:
   673  00101E  6C03               	negf	___awdiv@divisor^0,c
   674  001020  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   675  001022  B0D8               	btfsc	status,0,c
   676  001024  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   677  001026  0E01               	movlw	1
   678  001028  6E06               	movwf	___awdiv@sign^0,c
   679  00102A                     l885:
   680  00102A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   681  00102C  EF1C  F008         	goto	u160
   682  001030  EF1A  F008         	goto	u161
   683  001034                     u161:
   684  001034  EF22  F008         	goto	l891
   685  001038                     u160:
   686  001038  6C01               	negf	___awdiv@dividend^0,c
   687  00103A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   688  00103C  B0D8               	btfsc	status,0,c
   689  00103E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   690  001040  0E01               	movlw	1
   691  001042  1A06               	xorwf	___awdiv@sign^0,f,c
   692  001044                     l891:
   693  001044  0E00               	movlw	0
   694  001046  6E08               	movwf	(___awdiv@quotient+1)^0,c
   695  001048  0E00               	movlw	0
   696  00104A  6E07               	movwf	___awdiv@quotient^0,c
   697  00104C  5003               	movf	___awdiv@divisor^0,w,c
   698  00104E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   699  001050  B4D8               	btfsc	status,2,c
   700  001052  EF2D  F008         	goto	u171
   701  001056  EF2F  F008         	goto	u170
   702  00105A                     u171:
   703  00105A  EF57  F008         	goto	l913
   704  00105E                     u170:
   705  00105E  0E01               	movlw	1
   706  001060  6E05               	movwf	___awdiv@counter^0,c
   707  001062  EF37  F008         	goto	l899
   708  001066                     l897:
   709  001066  90D8               	bcf	status,0,c
   710  001068  3603               	rlcf	___awdiv@divisor^0,f,c
   711  00106A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   712  00106C  2A05               	incf	___awdiv@counter^0,f,c
   713  00106E                     l899:
   714  00106E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   715  001070  EF3C  F008         	goto	u181
   716  001074  EF3E  F008         	goto	u180
   717  001078                     u181:
   718  001078  EF33  F008         	goto	l897
   719  00107C                     u180:
   720  00107C                     l901:
   721  00107C  90D8               	bcf	status,0,c
   722  00107E  3607               	rlcf	___awdiv@quotient^0,f,c
   723  001080  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   724  001082  5003               	movf	___awdiv@divisor^0,w,c
   725  001084  5C01               	subwf	___awdiv@dividend^0,w,c
   726  001086  5004               	movf	(___awdiv@divisor+1)^0,w,c
   727  001088  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   728  00108A  A0D8               	btfss	status,0,c
   729  00108C  EF4A  F008         	goto	u191
   730  001090  EF4C  F008         	goto	u190
   731  001094                     u191:
   732  001094  EF51  F008         	goto	l909
   733  001098                     u190:
   734  001098  5003               	movf	___awdiv@divisor^0,w,c
   735  00109A  5E01               	subwf	___awdiv@dividend^0,f,c
   736  00109C  5004               	movf	(___awdiv@divisor+1)^0,w,c
   737  00109E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   738  0010A0  8007               	bsf	___awdiv@quotient^0,0,c
   739  0010A2                     l909:
   740  0010A2  90D8               	bcf	status,0,c
   741  0010A4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   742  0010A6  3203               	rrcf	___awdiv@divisor^0,f,c
   743  0010A8  2E05               	decfsz	___awdiv@counter^0,f,c
   744  0010AA  EF3E  F008         	goto	l901
   745  0010AE                     l913:
   746  0010AE  5006               	movf	___awdiv@sign^0,w,c
   747  0010B0  B4D8               	btfsc	status,2,c
   748  0010B2  EF5D  F008         	goto	u201
   749  0010B6  EF5F  F008         	goto	u200
   750  0010BA                     u201:
   751  0010BA  EF63  F008         	goto	l917
   752  0010BE                     u200:
   753  0010BE  6C07               	negf	___awdiv@quotient^0,c
   754  0010C0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   755  0010C2  B0D8               	btfsc	status,0,c
   756  0010C4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   757  0010C6                     l917:
   758  0010C6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   759  0010CA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   760  0010CE  0012               	return		;funcret
   761  0010D0                     __end_of___awdiv:
   762                           	callstack 0
   763                           
   764 ;; *************** function _pulsos *****************
   765 ;; Defined at:
   766 ;;		line 17 in file "code_PFU1.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		Interrupt level 2
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	intcode
   794  000008                     __pintcode:
   795                           	callstack 0
   796  000008                     _pulsos:
   797                           	callstack 28
   798                           
   799                           ;incstack = 0
   800  000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   801  00000A                     
   802                           ;code_PFU1.c: 19: 
   803  00000A  A2F2               	btfss	4082,1,c	;volatile
   804  00000C  EF0A  F000         	goto	i2u13_41
   805  000010  EF0C  F000         	goto	i2u13_40
   806  000014                     i2u13_41:
   807  000014  EF0E  F000         	goto	i2l849
   808  000018                     i2u13_40:
   809  000018                     
   810                           ;code_PFU1.c: 20:     uni = con%10;
   811  000018  2A0B               	incf	_con^0,f,c
   812  00001A                     
   813                           ;code_PFU1.c: 21:     dec = con/10;
   814  00001A  92F2               	bcf	4082,1,c	;volatile
   815  00001C                     i2l849:
   816                           
   817                           ;code_PFU1.c: 24: }
   818  00001C  A0F0               	btfss	4080,0,c	;volatile
   819  00001E  EF13  F000         	goto	i2u14_41
   820  000022  EF15  F000         	goto	i2u14_40
   821  000026                     i2u14_41:
   822  000026  EF18  F000         	goto	i2l47
   823  00002A                     i2u14_40:
   824  00002A                     
   825                           ;code_PFU1.c: 25: 
   826  00002A  0E00               	movlw	0
   827  00002C  6E0B               	movwf	_con^0,c
   828  00002E                     
   829                           ;code_PFU1.c: 26: void multip(unsigned char cen, unsigned char dec, unsigned char uni){
   830  00002E  90F0               	bcf	4080,0,c	;volatile
   831  000030                     i2l47:
   832  000030  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   833  000032  0011               	retfie		f
   834  000034                     __end_of_pulsos:
   835                           	callstack 0
   836                           
   837                           	psect	rparam
   838  0000                     
   839                           	psect	temp
   840  00000F                     btemp:
   841                           	callstack 0
   842  00000F                     	ds	1
   843  0000                     int$flags	set	btemp
   844  0000                     wtemp8	set	btemp+1
   845  0000                     ttemp5	set	btemp+1
   846  0000                     ttemp6	set	btemp+4
   847  0000                     ttemp7	set	btemp+8
   848                           
   849                           	psect	idloc
   850                           
   851                           ;Config register IDLOC0 @ 0x200000
   852                           ;	unspecified, using default values
   853  200000                     	org	2097152
   854  200000  FF                 	db	255
   855                           
   856                           ;Config register IDLOC1 @ 0x200001
   857                           ;	unspecified, using default values
   858  200001                     	org	2097153
   859  200001  FF                 	db	255
   860                           
   861                           ;Config register IDLOC2 @ 0x200002
   862                           ;	unspecified, using default values
   863  200002                     	org	2097154
   864  200002  FF                 	db	255
   865                           
   866                           ;Config register IDLOC3 @ 0x200003
   867                           ;	unspecified, using default values
   868  200003                     	org	2097155
   869  200003  FF                 	db	255
   870                           
   871                           ;Config register IDLOC4 @ 0x200004
   872                           ;	unspecified, using default values
   873  200004                     	org	2097156
   874  200004  FF                 	db	255
   875                           
   876                           ;Config register IDLOC5 @ 0x200005
   877                           ;	unspecified, using default values
   878  200005                     	org	2097157
   879  200005  FF                 	db	255
   880                           
   881                           ;Config register IDLOC6 @ 0x200006
   882                           ;	unspecified, using default values
   883  200006                     	org	2097158
   884  200006  FF                 	db	255
   885                           
   886                           ;Config register IDLOC7 @ 0x200007
   887                           ;	unspecified, using default values
   888  200007                     	org	2097159
   889  200007  FF                 	db	255
   890                           
   891                           	psect	config
   892                           
   893                           ; Padding undefined space
   894  300000                     	org	3145728
   895  300000  FF                 	db	255
   896                           
   897                           ;Config register CONFIG1H @ 0x300001
   898                           ;	Oscillator Selection bits
   899                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
   900                           ;	4X PLL Enable
   901                           ;	PLLCFG = 0x0, unprogrammed default
   902                           ;	Primary clock enable bit
   903                           ;	PRICLKEN = 0x1, unprogrammed default
   904                           ;	Fail-Safe Clock Monitor Enable bit
   905                           ;	FCMEN = 0x0, unprogrammed default
   906                           ;	Internal/External Oscillator Switchover bit
   907                           ;	IESO = 0x0, unprogrammed default
   908  300001                     	org	3145729
   909  300001  29                 	db	41
   910                           
   911                           ;Config register CONFIG2L @ 0x300002
   912                           ;	unspecified, using default values
   913                           ;	Power-up Timer Enable bit
   914                           ;	PWRTEN = 0x1, unprogrammed default
   915                           ;	Brown-out Reset Enable bits
   916                           ;	BOREN = 0x3, unprogrammed default
   917                           ;	Brown Out Reset Voltage bits
   918                           ;	BORV = 0x3, unprogrammed default
   919  300002                     	org	3145730
   920  300002  1F                 	db	31
   921                           
   922                           ;Config register CONFIG2H @ 0x300003
   923                           ;	unspecified, using default values
   924                           ;	Watchdog Timer Enable bits
   925                           ;	WDTEN = 0x3, unprogrammed default
   926                           ;	Watchdog Timer Postscale Select bits
   927                           ;	WDTPS = 0xF, unprogrammed default
   928  300003                     	org	3145731
   929  300003  3F                 	db	63
   930                           
   931                           ; Padding undefined space
   932  300004                     	org	3145732
   933  300004  FF                 	db	255
   934                           
   935                           ;Config register CONFIG3H @ 0x300005
   936                           ;	unspecified, using default values
   937                           ;	CCP2 MUX bit
   938                           ;	CCP2MX = 0x1, unprogrammed default
   939                           ;	PORTB A/D Enable bit
   940                           ;	PBADEN = 0x1, unprogrammed default
   941                           ;	P3A/CCP3 Mux bit
   942                           ;	CCP3MX = 0x1, unprogrammed default
   943                           ;	HFINTOSC Fast Start-up
   944                           ;	HFOFST = 0x1, unprogrammed default
   945                           ;	Timer3 Clock input mux bit
   946                           ;	T3CMX = 0x1, unprogrammed default
   947                           ;	ECCP2 B output mux bit
   948                           ;	P2BMX = 0x1, unprogrammed default
   949                           ;	MCLR Pin Enable bit
   950                           ;	MCLRE = 0x1, unprogrammed default
   951  300005                     	org	3145733
   952  300005  BF                 	db	191
   953                           
   954                           ;Config register CONFIG4L @ 0x300006
   955                           ;	unspecified, using default values
   956                           ;	Stack Full/Underflow Reset Enable bit
   957                           ;	STVREN = 0x1, unprogrammed default
   958                           ;	Single-Supply ICSP Enable bit
   959                           ;	LVP = 0x1, unprogrammed default
   960                           ;	Extended Instruction Set Enable bit
   961                           ;	XINST = 0x0, unprogrammed default
   962                           ;	Background Debug
   963                           ;	DEBUG = 0x1, unprogrammed default
   964  300006                     	org	3145734
   965  300006  85                 	db	133
   966                           
   967                           ; Padding undefined space
   968  300007                     	org	3145735
   969  300007  FF                 	db	255
   970                           
   971                           ;Config register CONFIG5L @ 0x300008
   972                           ;	unspecified, using default values
   973                           ;	Code Protection Block 0
   974                           ;	CP0 = 0x1, unprogrammed default
   975                           ;	Code Protection Block 1
   976                           ;	CP1 = 0x1, unprogrammed default
   977                           ;	Code Protection Block 2
   978                           ;	CP2 = 0x1, unprogrammed default
   979                           ;	Code Protection Block 3
   980                           ;	CP3 = 0x1, unprogrammed default
   981  300008                     	org	3145736
   982  300008  0F                 	db	15
   983                           
   984                           ;Config register CONFIG5H @ 0x300009
   985                           ;	unspecified, using default values
   986                           ;	Boot Block Code Protection bit
   987                           ;	CPB = 0x1, unprogrammed default
   988                           ;	Data EEPROM Code Protection bit
   989                           ;	CPD = 0x1, unprogrammed default
   990  300009                     	org	3145737
   991  300009  C0                 	db	192
   992                           
   993                           ;Config register CONFIG6L @ 0x30000A
   994                           ;	unspecified, using default values
   995                           ;	Write Protection Block 0
   996                           ;	WRT0 = 0x1, unprogrammed default
   997                           ;	Write Protection Block 1
   998                           ;	WRT1 = 0x1, unprogrammed default
   999                           ;	Write Protection Block 2
  1000                           ;	WRT2 = 0x1, unprogrammed default
  1001                           ;	Write Protection Block 3
  1002                           ;	WRT3 = 0x1, unprogrammed default
  1003  30000A                     	org	3145738
  1004  30000A  0F                 	db	15
  1005                           
  1006                           ;Config register CONFIG6H @ 0x30000B
  1007                           ;	unspecified, using default values
  1008                           ;	Configuration Register Write Protection bit
  1009                           ;	WRTC = 0x1, unprogrammed default
  1010                           ;	Boot Block Write Protection bit
  1011                           ;	WRTB = 0x1, unprogrammed default
  1012                           ;	Data EEPROM Write Protection bit
  1013                           ;	WRTD = 0x1, unprogrammed default
  1014  30000B                     	org	3145739
  1015  30000B  E0                 	db	224
  1016                           
  1017                           ;Config register CONFIG7L @ 0x30000C
  1018                           ;	unspecified, using default values
  1019                           ;	Table Read Protection Block 0
  1020                           ;	EBTR0 = 0x1, unprogrammed default
  1021                           ;	Table Read Protection Block 1
  1022                           ;	EBTR1 = 0x1, unprogrammed default
  1023                           ;	Table Read Protection Block 2
  1024                           ;	EBTR2 = 0x1, unprogrammed default
  1025                           ;	Table Read Protection Block 3
  1026                           ;	EBTR3 = 0x1, unprogrammed default
  1027  30000C                     	org	3145740
  1028  30000C  0F                 	db	15
  1029                           
  1030                           ;Config register CONFIG7H @ 0x30000D
  1031                           ;	unspecified, using default values
  1032                           ;	Boot Block Table Read Protection bit
  1033                           ;	EBTRB = 0x1, unprogrammed default
  1034  30000D                     	org	3145741
  1035  30000D  40                 	db	64
  1036                           tosu	equ	0xFFF
  1037                           tosh	equ	0xFFE
  1038                           tosl	equ	0xFFD
  1039                           stkptr	equ	0xFFC
  1040                           pclatu	equ	0xFFB
  1041                           pclath	equ	0xFFA
  1042                           pcl	equ	0xFF9
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           prodh	equ	0xFF4
  1048                           prodl	equ	0xFF3
  1049                           indf0	equ	0xFEF
  1050                           postinc0	equ	0xFEE
  1051                           postdec0	equ	0xFED
  1052                           preinc0	equ	0xFEC
  1053                           plusw0	equ	0xFEB
  1054                           fsr0h	equ	0xFEA
  1055                           fsr0l	equ	0xFE9
  1056                           wreg	equ	0xFE8
  1057                           indf1	equ	0xFE7
  1058                           postinc1	equ	0xFE6
  1059                           postdec1	equ	0xFE5
  1060                           preinc1	equ	0xFE4
  1061                           plusw1	equ	0xFE3
  1062                           fsr1h	equ	0xFE2
  1063                           fsr1l	equ	0xFE1
  1064                           bsr	equ	0xFE0
  1065                           indf2	equ	0xFDF
  1066                           postinc2	equ	0xFDE
  1067                           postdec2	equ	0xFDD
  1068                           preinc2	equ	0xFDC
  1069                           plusw2	equ	0xFDB
  1070                           fsr2h	equ	0xFDA
  1071                           fsr2l	equ	0xFD9
  1072                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_desnum
    _desnum->___awdiv

Critical Paths under _pulsos in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pulsos in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pulsos in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pulsos in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pulsos in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pulsos in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pulsos in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pulsos in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pulsos in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _pulsos in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _pulsos in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _pulsos in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _pulsos in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _pulsos in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _pulsos in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _pulsos in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _pulsos in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1412
                             _desnum
                             _multip
 ---------------------------------------------------------------------------------
 (1) _multip                                               4     2      2     218
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _desnum                                               2     0      2    1194
                                              8 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _pulsos                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _desnum
     ___awdiv
     ___awmod
   _multip

 _pulsos (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A       E       1       14.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      12        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 05 00:43:55 2021

                     l50 1296                       l53 124C             ___awdiv@sign 0006  
                    l308 117E                      l295 10CE                      l901 107C  
                    l911 10A8                      l903 1082                      l905 1098  
                    l913 10AE                      l921 10D0                      l915 10BE  
                    l907 10A0                      l931 10FC                      l923 10D4  
                    l917 10C6                      l909 10A2                      l941 1134  
                    l933 1104                      l925 10E2                      l951 116E  
                    l943 114A                      l935 1116                      l927 10EA  
                    l881 101E                      l953 1176                      l945 1152  
                    l937 111E                      l929 10EE                      l961 1206  
                    l891 1044                      l883 1026                      l947 1158  
                    l939 1126                      l971 1222                      l963 120A  
                    l893 104C                      l885 102A                      l877 100C  
                    l949 115E                      l957 124E                      l981 124A  
                    l973 1232                      l965 121A                      l895 105E  
                    l887 1038                      l879 1010                      l975 1234  
                    l967 121C                      l959 1204                      l991 11A8  
                    l983 1180                      l897 1066                      l889 1040  
                    l977 1236                      l969 121E                      l993 11AA  
                    l985 11A2                      l899 106E                      l979 123A  
                    l995 11AC                      l987 11A4                      _GIE 007F97  
                    l997 11BA                      l989 11A6                      l999 11C4  
                    u200 10BE                      u201 10BA                      u210 10E2  
                    u211 10DE                      u220 10FC                      u221 10F8  
                    u150 101E                      u230 1116                      u151 101A  
                    u231 1112                      u160 1038                      u240 1134  
                    u161 1034                      u241 1130                      u170 105E  
                    u250 114A                      u171 105A                      u251 1146  
                    u180 107C                      u260 116E                      u181 1078  
                    u261 116A                      u190 1098                      u191 1094  
                    u277 1210                      u287 1228                      u297 1240  
                    _dec 000D                      _cen 000C                      _con 000B  
                    _num 1001                      _uni 000E             ___awmod@sign 0006  
                    wreg 000FE8                     l1001 11D6                     l1003 11E8  
                   _LATD 000F8C                     _PEIE 007F96                     i2l47 0030  
                   _main 1180                     btemp 000F                     start 0034  
           ___param_bank 000000                    ?_main 0001          __end_of___awdiv 10D0  
        __end_of___awmod 1180          ___awdiv@divisor 0003                    i2l851 002A  
                  i2l843 000A                    i2l853 002E                    i2l845 0018  
                  i2l847 001A                    i2l849 001C          ___awdiv@counter 0005  
                  _TRISA 000F92                    _TRISD 000F95                    tablat 000FF5  
                  ttemp5 0010                    ttemp6 0013                    ttemp7 0017  
                  status 000FD8                    wtemp8 0010          __initialization 1298  
           __end_of_main 1202                   ??_main 000B            __activetblptr 000001  
       ___awdiv@dividend 0001                   _ANSELA 000F38                   _ANSELB 000F39  
                 _ANSELD 000F3B                   _INT0IE 007F94                   _INT0IF 007F91  
                 _INT1IE 007F83                   _INT1IF 007F80                ??___awdiv 0005  
              ??___awmod 0005                   _desnum 124E         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001                   _multip 1202  
        ___awmod@counter 0005                   _pulsos 0008             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 12A0            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  ?_desnum 0009                  ?_multip 0001  
                ?_pulsos 0001                  i2u13_40 0018                  i2u13_41 0014  
                i2u14_40 002A                  i2u14_41 0026                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 100C                  ___awmod 10D0  
           __psmallconst 1000          __size_of_desnum 004A                  __pcinit 1298  
                __ramtop 1000                  __ptext0 1180                  __ptext1 1202  
                __ptext2 124E                  __ptext3 10D0                  __ptext4 100C  
        __size_of_multip 004C          __size_of_pulsos 002C         ___awmod@dividend 0001  
   end_of_initialization 12A0           __end_of_desnum 1298           __end_of_multip 124E  
         __end_of_pulsos 0034      start_initialization 1298              __end_of_num 100B  
               ??_desnum 000B                 ??_multip 0003                 ??_pulsos 0001  
            __pbssCOMRAM 000B                __pintcode 0008                 ?___awdiv 0001  
               ?___awmod 0001              __smallconst 1000                 _LATAbits 000F89  
              desnum@con 0009                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 1000         __size_of___awdiv 00C4         __size_of___awmod 00B0  
          __size_of_main 0082                 isa$xinst 000000                 int$flags 000F  
              multip@dec 0001                multip@cen 0004                multip@uni 0002  
               intlevel2 0000               _OSCCONbits 000FD3  
